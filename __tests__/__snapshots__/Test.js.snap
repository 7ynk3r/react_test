// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View>
  <Text
    accessible={true}
    allowFontScaling={true}
    disabled={false}
    ellipsizeMode="tail"
  >
    joe
  </Text>
  <View>
    <View>
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
      >
        item 1
      </Text>
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
      />
      <View
        accessibilityComponentType="button"
        accessibilityLabel={undefined}
        accessibilityTraits={
          Array [
            "button",
          ]
        }
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "padding": 8,
                  "textAlign": "center",
                },
              ]
            }
          >
            Delete
          </Text>
        </View>
      </View>
    </View>
    <View>
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
      >
        item 2
      </Text>
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
      />
      <View
        accessibilityComponentType="button"
        accessibilityLabel={undefined}
        accessibilityTraits={
          Array [
            "button",
          ]
        }
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "padding": 8,
                  "textAlign": "center",
                },
              ]
            }
          >
            Delete
          </Text>
        </View>
      </View>
    </View>
    <Text
      accessible={true}
      allowFontScaling={true}
      disabled={false}
      ellipsizeMode="tail"
    >
      Total 
      11
    </Text>
  </View>
</View>
`;

exports[`renders empty correctly 1`] = `
<View>
  <Total
    total={0}
  />
</View>
`;

exports[`renders one item correctly 1`] = `
<View>
  <Item
    item={
      Object {
        "id": 1,
        "name": "item 1",
        "value": 7,
      }
    }
    onDelete={[Function]}
  />
  <Total
    total={7}
  />
</View>
`;

exports[`renders one item deleted correctly 1`] = `
<View>
  <Item
    item={
      Object {
        "id": 1,
        "name": "item 1",
        "value": 7,
      }
    }
    onDelete={[Function]}
  />
  <Item
    item={
      Object {
        "id": 2,
        "name": "item 2",
        "value": 4,
      }
    }
    onDelete={[Function]}
  />
  <Total
    total={11}
  />
</View>
`;

exports[`renders one item deleted correctly 2`] = `
<View>
  <Item
    item={
      Object {
        "id": 2,
        "name": "item 2",
        "value": 4,
      }
    }
    onDelete={[Function]}
  />
  <Total
    total={4}
  />
</View>
`;
